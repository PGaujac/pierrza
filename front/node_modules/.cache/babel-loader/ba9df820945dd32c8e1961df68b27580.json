{"ast":null,"code":"var _jsxFileName = \"/Users/pierredegaujac/Desktop/le_bocal/pierrza/pierrza/front/src/components/ChatBox/Chat.js\";\nimport React, { Component } from 'react';\nimport io from 'socket.io-client';\nimport { Card } from 'react-bootstrap';\nimport { Launcher } from 'react-chat-window';\nimport './Chat.css';\nconst socket = io('http://localhost:8080');\nexport class Chat extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setMessage = e => {\n      this.setState({\n        currentMessage: e.target.value\n      });\n    };\n\n    this.sendMsg = e => {\n      if (this.state.currentMessage !== '') {\n        e.preventDefault();\n        socket.emit('chat message', this.state.currentMessage);\n        const message = this.state.messages;\n        message.push(this.state.currentMessage);\n        this.setState({\n          messages: message,\n          currentMessage: ''\n        });\n      } else {\n        return;\n      }\n    };\n\n    this.showMessage = () => {\n      return this.state.messages.map((element, index) => React.createElement(\"li\", {\n        className: \"chat-item\",\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, element));\n    };\n\n    this.state = {\n      messages: [],\n      currentMessage: '',\n      messageList: []\n    };\n  }\n\n  _onMessageWasSent(message) {\n    this.setState({\n      messageList: [...this.state.messageList, message]\n    });\n  }\n\n  _sendMessage(text) {\n    if (text.length > 0) {\n      this.setState({\n        messageList: [...this.state.messageList, {\n          author: 'them',\n          type: 'text',\n          data: {\n            text\n          }\n        }]\n      });\n      socket.emit('chat message', this.state.messageList.message);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Launcher, {\n      agentProfile: {\n        teamName: 'LA PIERRZA',\n        imageUrl: 'https://a.slack-edge.com/66f9/img/avatars-teams/ava_0001-34.png'\n      },\n      onMessageWasSent: this._onMessageWasSent.bind(this),\n      messageList: this.state.messageList,\n      showEmoji: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }));\n  }\n\n}\nexport default Chat;","map":{"version":3,"sources":["/Users/pierredegaujac/Desktop/le_bocal/pierrza/pierrza/front/src/components/ChatBox/Chat.js"],"names":["React","Component","io","Card","Launcher","socket","Chat","constructor","props","setMessage","e","setState","currentMessage","target","value","sendMsg","state","preventDefault","emit","message","messages","push","showMessage","map","element","index","messageList","_onMessageWasSent","_sendMessage","text","length","author","type","data","render","teamName","imageUrl","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport io from 'socket.io-client';\nimport { Card } from 'react-bootstrap';\nimport { Launcher } from 'react-chat-window';\n\nimport './Chat.css';\nconst socket = io('http://localhost:8080');\n\nexport class Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [],\n      currentMessage: '',\n      messageList: []\n    };\n  }\n\n  _onMessageWasSent(message) {\n    this.setState({\n      messageList: [...this.state.messageList, message]\n    });\n  }\n\n  _sendMessage(text) {\n    if (text.length > 0) {\n      this.setState({\n        messageList: [\n          ...this.state.messageList,\n          {\n            author: 'them',\n            type: 'text',\n            data: { text }\n          }\n        ]\n      });\n      socket.emit('chat message', this.state.messageList.message);\n    }\n  }\n\n  setMessage = e => {\n    this.setState({ currentMessage: e.target.value });\n  };\n\n  sendMsg = e => {\n    if (this.state.currentMessage !== '') {\n      e.preventDefault();\n      socket.emit('chat message', this.state.currentMessage);\n      const message = this.state.messages;\n      message.push(this.state.currentMessage);\n      this.setState({ messages: message, currentMessage: '' });\n    } else {\n      return;\n    }\n  };\n\n  showMessage = () => {\n    return this.state.messages.map((element, index) => (\n      <li className='chat-item' key={index}>\n        {element}\n      </li>\n    ));\n  };\n\n  render() {\n    return (\n      <div>\n        {/* <Card>\n          <div className='chat-display'>\n            <ul>{this.showMessage()}</ul>\n          </div>\n\n          <div className='input'>\n            <input\n              type='text'\n              name=''\n              value={this.state.currentMessage}\n              onChange={this.setMessage}\n            />\n            <button onClick={this.sendMsg}>Send</button>\n          </div>\n        </Card> */}\n        <Launcher\n          agentProfile={{\n            teamName: 'LA PIERRZA',\n            imageUrl:\n              'https://a.slack-edge.com/66f9/img/avatars-teams/ava_0001-34.png'\n          }}\n          onMessageWasSent={this._onMessageWasSent.bind(this)}\n          messageList={this.state.messageList}\n          showEmoji\n        />\n      </div>\n    );\n  }\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}